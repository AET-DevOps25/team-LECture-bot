plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5' // Or the latest stable version
    id 'io.spring.dependency-management' version '1.1.4' // Or the latest stable version
}

group = 'com.lecturebot'
version = '0.0.1-SNAPSHOT'
archivesBaseName = 'discovery-service'
sourceCompatibility = '21'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.1");
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'


}

tasks.named('test') {
    useJUnitPlatform()
}

// Optional: If you need to exclude Lombok from the final JAR,
// though Spring Boot's Gradle plugin often handles this well.
// If you encounter issues, you might need specific configurations here.
// For example, the bootJar task can be configured:
// bootJar {
//    launchScript() // Example of a common configuration
//    // If lombok is still included and causing issues:
//    // configurations.compileOnly.extendsFrom configurations.annotationProcessor
// }

// To ensure that the fat JAR (executable JAR) is built correctly
tasks.withType(org.springframework.boot.gradle.tasks.bundling.BootJar) {
    mainClass = 'com.lecturebot.LectureBotApplication' // Set your main class
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
