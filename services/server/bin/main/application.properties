# Server Configuration
server.port=8080

# Spring Application Name
spring.application.name=lecturebot-server

# Database Configuration (Values here are defaults, typically overridden by environment variables in Docker)
spring.datasource.url=jdbc:postgresql://lecturebot-db:5432/lecturebot_db # 'lecturebot-db' is the service name from docker-compose.yml
spring.datasource.username=lecturebot_user
spring.datasource.password=secret
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
# spring.jpa.hibernate.ddl-auto=update # Options: validate, update, create, create-drop, none
# Set to 'validate' if your init-users.sql handles schema creation and you want Hibernate to check consistency.
# Set to 'update' if you want Hibernate to try to update the schema (use with caution).
# Set to 'none' if your init-users.sql is the sole source of truth for the schema and Hibernate shouldn't touch it.
# Given init-users.sql creates the table, 'validate' is a good starting point.
spring.jpa.hibernate.ddl-auto=validate
# Useful for debugging SQL queries
spring.jpa.show-sql=true 
# Makes SQL logs more readable
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

app.jwtSecret=ng5hl+XNBp8tM5S+8pbHEzimyjOR5DBXdATzMbrkHpNL2KsJMRL547GO7VuQqDz9BQNrBa+Dhqr1vB3OhzYPIw==
# 1 day in milliseconds
app.jwtExpirationInMs=86400000 

# Logging Configuration (Example - Spring Boot default is usually good to start)
# logging.level.root=INFO
# logging.level.com.lecturebot=DEBUG # Set to DEBUG to see more detailed logs from your app
# logging.file.name=logs/lecturebot-server.log

# Actuator Endpoints
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when_authorized
