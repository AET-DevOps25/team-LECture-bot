apiVersion: apps/v1
kind: Deployment
metadata:
  name: lecturebot-db
  namespace: "{{ .Values.namespacename }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lecturebot-db
  template:
    metadata:
      labels:
        app: lecturebot-db
    spec:
      containers:
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.db.postgresUser }}
                - -d
                - {{ .Values.db.postgresDb }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.db.postgresUser }}
                - -d
                - {{ .Values.db.postgresDb }}
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: POSTGRES_DB
              value: "{{ .Values.db.postgresDb }}"
            - name: POSTGRES_USER
              value: "{{ .Values.db.postgresUser }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.db.postgresPassword }}"
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
            - name: db-init
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: lecturebot-db-pvc
        - name: db-init
          configMap:
            name: db-init-scripts

